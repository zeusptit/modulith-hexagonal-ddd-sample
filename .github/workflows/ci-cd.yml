name: CI/CD for Spring Boot

on:
  push:
    branches:
      - master    # Chạy khi có push vào nhánh master
  pull_request:
    branches:
      - master    # Chạy khi tạo pull request vào nhánh master

jobs:
  # Job Build and Test
  build_and_test:
    runs-on: ubuntu-latest  # Chạy trên Ubuntu

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: catalog_db
          MYSQL_USER: dbuser
          MYSQL_PASSWORD: dbpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --host=localhost --password=rootpass" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'    # Đặt version JDK phù hợp với ứng dụng
          distribution: 'temurin'   # Chỉ định JDK distribution

      - name: Make `wait-for-it.sh` executable
        run: chmod +x ./wait-for-it.sh

      - name: Wait for MySQL to be ready
        run: |
          ./wait-for-it.sh mysql-hexagonal-ddd:3306 --timeout=30 --strict -- echo "MySQL is up"

      - name: Build and test with Maven
        run: mvn clean install -DskipTests=false  # Chạy maven build và tests

  # Job Health Check (kiểm tra tình trạng ứng dụng)
  health_check:
    needs: build_and_test  # Chỉ chạy health check nếu job build_and_test thành công
    runs-on: ubuntu-latest
    steps:
      - name: Check service health
        run: |
          curl --fail http://localhost:8080/actuator/health || exit 1  # Kiểm tra trạng thái health của ứng dụng

  # Job Deploy (nếu cần deploy)
#  deploy:
#    needs: build_and_test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out the repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adoptopenjdk'   # Chỉ định JDK distribution
#
#      - name: Build Docker image
#        run: |
#          docker build -t my-spring-boot-app .
#          docker tag my-spring-boot-app:latest myusername/my-spring-boot-app:latest
#          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#          docker push myusername/my-spring-boot-app:latest
